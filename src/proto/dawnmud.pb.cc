// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dawnmud.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dawnmud.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace DawnMud {

namespace {

const ::google::protobuf::Descriptor* Zone_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Zone_reflection_ = NULL;
const ::google::protobuf::Descriptor* Zone_ResetCommands_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Zone_ResetCommands_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Zone_ResetCommands_Commands_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* Zone_ResetMode_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ZoneList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ZoneList_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_dawnmud_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_dawnmud_2eproto() {
  protobuf_AddDesc_dawnmud_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "dawnmud.proto");
  GOOGLE_CHECK(file != NULL);
  Zone_descriptor_ = file->message_type(0);
  static const int Zone_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Zone, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Zone, builders_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Zone, lifespan_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Zone, age_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Zone, bot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Zone, top_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Zone, reset_mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Zone, number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Zone, reset_com_),
  };
  Zone_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Zone_descriptor_,
      Zone::default_instance_,
      Zone_offsets_,
      -1,
      -1,
      -1,
      sizeof(Zone),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Zone, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Zone, _is_default_instance_));
  Zone_ResetCommands_descriptor_ = Zone_descriptor_->nested_type(0);
  static const int Zone_ResetCommands_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Zone_ResetCommands, command_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Zone_ResetCommands, if_flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Zone_ResetCommands, arg1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Zone_ResetCommands, arg2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Zone_ResetCommands, arg3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Zone_ResetCommands, line_),
  };
  Zone_ResetCommands_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Zone_ResetCommands_descriptor_,
      Zone_ResetCommands::default_instance_,
      Zone_ResetCommands_offsets_,
      -1,
      -1,
      -1,
      sizeof(Zone_ResetCommands),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Zone_ResetCommands, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Zone_ResetCommands, _is_default_instance_));
  Zone_ResetCommands_Commands_descriptor_ = Zone_ResetCommands_descriptor_->enum_type(0);
  Zone_ResetMode_descriptor_ = Zone_descriptor_->enum_type(0);
  ZoneList_descriptor_ = file->message_type(1);
  static const int ZoneList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZoneList, zone_),
  };
  ZoneList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ZoneList_descriptor_,
      ZoneList::default_instance_,
      ZoneList_offsets_,
      -1,
      -1,
      -1,
      sizeof(ZoneList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZoneList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZoneList, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_dawnmud_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Zone_descriptor_, &Zone::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Zone_ResetCommands_descriptor_, &Zone_ResetCommands::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ZoneList_descriptor_, &ZoneList::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_dawnmud_2eproto() {
  delete Zone::default_instance_;
  delete Zone_reflection_;
  delete Zone_ResetCommands::default_instance_;
  delete Zone_ResetCommands_reflection_;
  delete ZoneList::default_instance_;
  delete ZoneList_reflection_;
}

void protobuf_AddDesc_dawnmud_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_dawnmud_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rdawnmud.proto\022\007DawnMud\"\240\004\n\004Zone\022\014\n\004nam"
    "e\030\001 \001(\t\022\020\n\010builders\030\002 \003(\t\022\020\n\010lifespan\030\003 "
    "\001(\021\022\013\n\003age\030\004 \001(\021\022\013\n\003bot\030\005 \001(\021\022\013\n\003top\030\006 \001"
    "(\021\022+\n\nreset_mode\030\007 \001(\0162\027.DawnMud.Zone.Re"
    "setMode\022\016\n\006number\030\010 \001(\021\022.\n\treset_com\030\t \003"
    "(\0132\033.DawnMud.Zone.ResetCommands\032\233\002\n\rRese"
    "tCommands\0225\n\007command\030\001 \001(\0162$.DawnMud.Zon"
    "e.ResetCommands.Commands\022\017\n\007if_flag\030\002 \001("
    "\010\022\014\n\004arg1\030\003 \001(\021\022\014\n\004arg2\030\004 \001(\021\022\014\n\004arg3\030\005 "
    "\001(\021\022\014\n\004line\030\006 \001(\021\"\211\001\n\010Commands\022\017\n\013READ_M"
    "OBILE\020\000\022\017\n\013READ_OBJECT\020\001\022\020\n\014GIVE_OBJ_MOB"
    "\020\002\022\017\n\013PUT_OBJ_OBJ\020\003\022\021\n\rGIVE_OBJ_CHAR\020\004\022\022"
    "\n\016OBJ_CHAR_EQUIP\020\005\022\021\n\rSTATE_OF_DOOR\020\006\"4\n"
    "\tResetMode\022\014\n\010NO_RESET\020\000\022\t\n\005RESET\020\001\022\016\n\nH"
    "ARD_RESET\020\002\"\'\n\010ZoneList\022\033\n\004zone\030\001 \003(\0132\r."
    "DawnMud.Zoneb\006proto3", 620);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dawnmud.proto", &protobuf_RegisterTypes);
  Zone::default_instance_ = new Zone();
  Zone_ResetCommands::default_instance_ = new Zone_ResetCommands();
  ZoneList::default_instance_ = new ZoneList();
  Zone::default_instance_->InitAsDefaultInstance();
  Zone_ResetCommands::default_instance_->InitAsDefaultInstance();
  ZoneList::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_dawnmud_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_dawnmud_2eproto {
  StaticDescriptorInitializer_dawnmud_2eproto() {
    protobuf_AddDesc_dawnmud_2eproto();
  }
} static_descriptor_initializer_dawnmud_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* Zone_ResetMode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Zone_ResetMode_descriptor_;
}
bool Zone_ResetMode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Zone_ResetMode Zone::NO_RESET;
const Zone_ResetMode Zone::RESET;
const Zone_ResetMode Zone::HARD_RESET;
const Zone_ResetMode Zone::ResetMode_MIN;
const Zone_ResetMode Zone::ResetMode_MAX;
const int Zone::ResetMode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Zone_ResetCommands_Commands_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Zone_ResetCommands_Commands_descriptor_;
}
bool Zone_ResetCommands_Commands_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Zone_ResetCommands_Commands Zone_ResetCommands::READ_MOBILE;
const Zone_ResetCommands_Commands Zone_ResetCommands::READ_OBJECT;
const Zone_ResetCommands_Commands Zone_ResetCommands::GIVE_OBJ_MOB;
const Zone_ResetCommands_Commands Zone_ResetCommands::PUT_OBJ_OBJ;
const Zone_ResetCommands_Commands Zone_ResetCommands::GIVE_OBJ_CHAR;
const Zone_ResetCommands_Commands Zone_ResetCommands::OBJ_CHAR_EQUIP;
const Zone_ResetCommands_Commands Zone_ResetCommands::STATE_OF_DOOR;
const Zone_ResetCommands_Commands Zone_ResetCommands::Commands_MIN;
const Zone_ResetCommands_Commands Zone_ResetCommands::Commands_MAX;
const int Zone_ResetCommands::Commands_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Zone_ResetCommands::kCommandFieldNumber;
const int Zone_ResetCommands::kIfFlagFieldNumber;
const int Zone_ResetCommands::kArg1FieldNumber;
const int Zone_ResetCommands::kArg2FieldNumber;
const int Zone_ResetCommands::kArg3FieldNumber;
const int Zone_ResetCommands::kLineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Zone_ResetCommands::Zone_ResetCommands()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DawnMud.Zone.ResetCommands)
}

void Zone_ResetCommands::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Zone_ResetCommands::Zone_ResetCommands(const Zone_ResetCommands& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DawnMud.Zone.ResetCommands)
}

void Zone_ResetCommands::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  command_ = 0;
  if_flag_ = false;
  arg1_ = 0;
  arg2_ = 0;
  arg3_ = 0;
  line_ = 0;
}

Zone_ResetCommands::~Zone_ResetCommands() {
  // @@protoc_insertion_point(destructor:DawnMud.Zone.ResetCommands)
  SharedDtor();
}

void Zone_ResetCommands::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Zone_ResetCommands::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Zone_ResetCommands::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Zone_ResetCommands_descriptor_;
}

const Zone_ResetCommands& Zone_ResetCommands::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dawnmud_2eproto();
  return *default_instance_;
}

Zone_ResetCommands* Zone_ResetCommands::default_instance_ = NULL;

Zone_ResetCommands* Zone_ResetCommands::New(::google::protobuf::Arena* arena) const {
  Zone_ResetCommands* n = new Zone_ResetCommands;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Zone_ResetCommands::Clear() {
// @@protoc_insertion_point(message_clear_start:DawnMud.Zone.ResetCommands)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Zone_ResetCommands, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Zone_ResetCommands*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(command_, line_);

#undef ZR_HELPER_
#undef ZR_

}

bool Zone_ResetCommands::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DawnMud.Zone.ResetCommands)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .DawnMud.Zone.ResetCommands.Commands command = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_command(static_cast< ::DawnMud::Zone_ResetCommands_Commands >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_if_flag;
        break;
      }

      // optional bool if_flag = 2;
      case 2: {
        if (tag == 16) {
         parse_if_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &if_flag_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_arg1;
        break;
      }

      // optional sint32 arg1 = 3;
      case 3: {
        if (tag == 24) {
         parse_arg1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &arg1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_arg2;
        break;
      }

      // optional sint32 arg2 = 4;
      case 4: {
        if (tag == 32) {
         parse_arg2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &arg2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_arg3;
        break;
      }

      // optional sint32 arg3 = 5;
      case 5: {
        if (tag == 40) {
         parse_arg3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &arg3_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_line;
        break;
      }

      // optional sint32 line = 6;
      case 6: {
        if (tag == 48) {
         parse_line:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &line_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DawnMud.Zone.ResetCommands)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DawnMud.Zone.ResetCommands)
  return false;
#undef DO_
}

void Zone_ResetCommands::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DawnMud.Zone.ResetCommands)
  // optional .DawnMud.Zone.ResetCommands.Commands command = 1;
  if (this->command() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->command(), output);
  }

  // optional bool if_flag = 2;
  if (this->if_flag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->if_flag(), output);
  }

  // optional sint32 arg1 = 3;
  if (this->arg1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->arg1(), output);
  }

  // optional sint32 arg2 = 4;
  if (this->arg2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->arg2(), output);
  }

  // optional sint32 arg3 = 5;
  if (this->arg3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->arg3(), output);
  }

  // optional sint32 line = 6;
  if (this->line() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->line(), output);
  }

  // @@protoc_insertion_point(serialize_end:DawnMud.Zone.ResetCommands)
}

::google::protobuf::uint8* Zone_ResetCommands::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DawnMud.Zone.ResetCommands)
  // optional .DawnMud.Zone.ResetCommands.Commands command = 1;
  if (this->command() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->command(), target);
  }

  // optional bool if_flag = 2;
  if (this->if_flag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->if_flag(), target);
  }

  // optional sint32 arg1 = 3;
  if (this->arg1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->arg1(), target);
  }

  // optional sint32 arg2 = 4;
  if (this->arg2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->arg2(), target);
  }

  // optional sint32 arg3 = 5;
  if (this->arg3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->arg3(), target);
  }

  // optional sint32 line = 6;
  if (this->line() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->line(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DawnMud.Zone.ResetCommands)
  return target;
}

int Zone_ResetCommands::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DawnMud.Zone.ResetCommands)
  int total_size = 0;

  // optional .DawnMud.Zone.ResetCommands.Commands command = 1;
  if (this->command() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->command());
  }

  // optional bool if_flag = 2;
  if (this->if_flag() != 0) {
    total_size += 1 + 1;
  }

  // optional sint32 arg1 = 3;
  if (this->arg1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->arg1());
  }

  // optional sint32 arg2 = 4;
  if (this->arg2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->arg2());
  }

  // optional sint32 arg3 = 5;
  if (this->arg3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->arg3());
  }

  // optional sint32 line = 6;
  if (this->line() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->line());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Zone_ResetCommands::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DawnMud.Zone.ResetCommands)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Zone_ResetCommands* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Zone_ResetCommands>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DawnMud.Zone.ResetCommands)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DawnMud.Zone.ResetCommands)
    MergeFrom(*source);
  }
}

void Zone_ResetCommands::MergeFrom(const Zone_ResetCommands& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DawnMud.Zone.ResetCommands)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.command() != 0) {
    set_command(from.command());
  }
  if (from.if_flag() != 0) {
    set_if_flag(from.if_flag());
  }
  if (from.arg1() != 0) {
    set_arg1(from.arg1());
  }
  if (from.arg2() != 0) {
    set_arg2(from.arg2());
  }
  if (from.arg3() != 0) {
    set_arg3(from.arg3());
  }
  if (from.line() != 0) {
    set_line(from.line());
  }
}

void Zone_ResetCommands::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DawnMud.Zone.ResetCommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Zone_ResetCommands::CopyFrom(const Zone_ResetCommands& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DawnMud.Zone.ResetCommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Zone_ResetCommands::IsInitialized() const {

  return true;
}

void Zone_ResetCommands::Swap(Zone_ResetCommands* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Zone_ResetCommands::InternalSwap(Zone_ResetCommands* other) {
  std::swap(command_, other->command_);
  std::swap(if_flag_, other->if_flag_);
  std::swap(arg1_, other->arg1_);
  std::swap(arg2_, other->arg2_);
  std::swap(arg3_, other->arg3_);
  std::swap(line_, other->line_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Zone_ResetCommands::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Zone_ResetCommands_descriptor_;
  metadata.reflection = Zone_ResetCommands_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Zone::kNameFieldNumber;
const int Zone::kBuildersFieldNumber;
const int Zone::kLifespanFieldNumber;
const int Zone::kAgeFieldNumber;
const int Zone::kBotFieldNumber;
const int Zone::kTopFieldNumber;
const int Zone::kResetModeFieldNumber;
const int Zone::kNumberFieldNumber;
const int Zone::kResetComFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Zone::Zone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DawnMud.Zone)
}

void Zone::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Zone::Zone(const Zone& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DawnMud.Zone)
}

void Zone::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lifespan_ = 0;
  age_ = 0;
  bot_ = 0;
  top_ = 0;
  reset_mode_ = 0;
  number_ = 0;
}

Zone::~Zone() {
  // @@protoc_insertion_point(destructor:DawnMud.Zone)
  SharedDtor();
}

void Zone::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Zone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Zone::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Zone_descriptor_;
}

const Zone& Zone::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dawnmud_2eproto();
  return *default_instance_;
}

Zone* Zone::default_instance_ = NULL;

Zone* Zone::New(::google::protobuf::Arena* arena) const {
  Zone* n = new Zone;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Zone::Clear() {
// @@protoc_insertion_point(message_clear_start:DawnMud.Zone)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Zone, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Zone*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(lifespan_, number_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  builders_.Clear();
  reset_com_.Clear();
}

bool Zone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DawnMud.Zone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DawnMud.Zone.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_builders;
        break;
      }

      // repeated string builders = 2;
      case 2: {
        if (tag == 18) {
         parse_builders:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_builders()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->builders(this->builders_size() - 1).data(),
            this->builders(this->builders_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DawnMud.Zone.builders"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_builders;
        if (input->ExpectTag(24)) goto parse_lifespan;
        break;
      }

      // optional sint32 lifespan = 3;
      case 3: {
        if (tag == 24) {
         parse_lifespan:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &lifespan_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_age;
        break;
      }

      // optional sint32 age = 4;
      case 4: {
        if (tag == 32) {
         parse_age:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &age_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_bot;
        break;
      }

      // optional sint32 bot = 5;
      case 5: {
        if (tag == 40) {
         parse_bot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &bot_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_top;
        break;
      }

      // optional sint32 top = 6;
      case 6: {
        if (tag == 48) {
         parse_top:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &top_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_reset_mode;
        break;
      }

      // optional .DawnMud.Zone.ResetMode reset_mode = 7;
      case 7: {
        if (tag == 56) {
         parse_reset_mode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reset_mode(static_cast< ::DawnMud::Zone_ResetMode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_number;
        break;
      }

      // optional sint32 number = 8;
      case 8: {
        if (tag == 64) {
         parse_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &number_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_reset_com;
        break;
      }

      // repeated .DawnMud.Zone.ResetCommands reset_com = 9;
      case 9: {
        if (tag == 74) {
         parse_reset_com:
          DO_(input->IncrementRecursionDepth());
         parse_loop_reset_com:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_reset_com()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_loop_reset_com;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DawnMud.Zone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DawnMud.Zone)
  return false;
#undef DO_
}

void Zone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DawnMud.Zone)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DawnMud.Zone.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated string builders = 2;
  for (int i = 0; i < this->builders_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->builders(i).data(), this->builders(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DawnMud.Zone.builders");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->builders(i), output);
  }

  // optional sint32 lifespan = 3;
  if (this->lifespan() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->lifespan(), output);
  }

  // optional sint32 age = 4;
  if (this->age() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->age(), output);
  }

  // optional sint32 bot = 5;
  if (this->bot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->bot(), output);
  }

  // optional sint32 top = 6;
  if (this->top() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->top(), output);
  }

  // optional .DawnMud.Zone.ResetMode reset_mode = 7;
  if (this->reset_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->reset_mode(), output);
  }

  // optional sint32 number = 8;
  if (this->number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(8, this->number(), output);
  }

  // repeated .DawnMud.Zone.ResetCommands reset_com = 9;
  for (unsigned int i = 0, n = this->reset_com_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->reset_com(i), output);
  }

  // @@protoc_insertion_point(serialize_end:DawnMud.Zone)
}

::google::protobuf::uint8* Zone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DawnMud.Zone)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DawnMud.Zone.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated string builders = 2;
  for (int i = 0; i < this->builders_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->builders(i).data(), this->builders(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DawnMud.Zone.builders");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->builders(i), target);
  }

  // optional sint32 lifespan = 3;
  if (this->lifespan() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->lifespan(), target);
  }

  // optional sint32 age = 4;
  if (this->age() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->age(), target);
  }

  // optional sint32 bot = 5;
  if (this->bot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->bot(), target);
  }

  // optional sint32 top = 6;
  if (this->top() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->top(), target);
  }

  // optional .DawnMud.Zone.ResetMode reset_mode = 7;
  if (this->reset_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->reset_mode(), target);
  }

  // optional sint32 number = 8;
  if (this->number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(8, this->number(), target);
  }

  // repeated .DawnMud.Zone.ResetCommands reset_com = 9;
  for (unsigned int i = 0, n = this->reset_com_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->reset_com(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DawnMud.Zone)
  return target;
}

int Zone::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DawnMud.Zone)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional sint32 lifespan = 3;
  if (this->lifespan() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->lifespan());
  }

  // optional sint32 age = 4;
  if (this->age() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->age());
  }

  // optional sint32 bot = 5;
  if (this->bot() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->bot());
  }

  // optional sint32 top = 6;
  if (this->top() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->top());
  }

  // optional .DawnMud.Zone.ResetMode reset_mode = 7;
  if (this->reset_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reset_mode());
  }

  // optional sint32 number = 8;
  if (this->number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->number());
  }

  // repeated string builders = 2;
  total_size += 1 * this->builders_size();
  for (int i = 0; i < this->builders_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->builders(i));
  }

  // repeated .DawnMud.Zone.ResetCommands reset_com = 9;
  total_size += 1 * this->reset_com_size();
  for (int i = 0; i < this->reset_com_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reset_com(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Zone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DawnMud.Zone)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Zone* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Zone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DawnMud.Zone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DawnMud.Zone)
    MergeFrom(*source);
  }
}

void Zone::MergeFrom(const Zone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DawnMud.Zone)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  builders_.MergeFrom(from.builders_);
  reset_com_.MergeFrom(from.reset_com_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.lifespan() != 0) {
    set_lifespan(from.lifespan());
  }
  if (from.age() != 0) {
    set_age(from.age());
  }
  if (from.bot() != 0) {
    set_bot(from.bot());
  }
  if (from.top() != 0) {
    set_top(from.top());
  }
  if (from.reset_mode() != 0) {
    set_reset_mode(from.reset_mode());
  }
  if (from.number() != 0) {
    set_number(from.number());
  }
}

void Zone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DawnMud.Zone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Zone::CopyFrom(const Zone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DawnMud.Zone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Zone::IsInitialized() const {

  return true;
}

void Zone::Swap(Zone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Zone::InternalSwap(Zone* other) {
  name_.Swap(&other->name_);
  builders_.UnsafeArenaSwap(&other->builders_);
  std::swap(lifespan_, other->lifespan_);
  std::swap(age_, other->age_);
  std::swap(bot_, other->bot_);
  std::swap(top_, other->top_);
  std::swap(reset_mode_, other->reset_mode_);
  std::swap(number_, other->number_);
  reset_com_.UnsafeArenaSwap(&other->reset_com_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Zone::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Zone_descriptor_;
  metadata.reflection = Zone_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Zone_ResetCommands

// optional .DawnMud.Zone.ResetCommands.Commands command = 1;
void Zone_ResetCommands::clear_command() {
  command_ = 0;
}
 ::DawnMud::Zone_ResetCommands_Commands Zone_ResetCommands::command() const {
  // @@protoc_insertion_point(field_get:DawnMud.Zone.ResetCommands.command)
  return static_cast< ::DawnMud::Zone_ResetCommands_Commands >(command_);
}
 void Zone_ResetCommands::set_command(::DawnMud::Zone_ResetCommands_Commands value) {
  
  command_ = value;
  // @@protoc_insertion_point(field_set:DawnMud.Zone.ResetCommands.command)
}

// optional bool if_flag = 2;
void Zone_ResetCommands::clear_if_flag() {
  if_flag_ = false;
}
 bool Zone_ResetCommands::if_flag() const {
  // @@protoc_insertion_point(field_get:DawnMud.Zone.ResetCommands.if_flag)
  return if_flag_;
}
 void Zone_ResetCommands::set_if_flag(bool value) {
  
  if_flag_ = value;
  // @@protoc_insertion_point(field_set:DawnMud.Zone.ResetCommands.if_flag)
}

// optional sint32 arg1 = 3;
void Zone_ResetCommands::clear_arg1() {
  arg1_ = 0;
}
 ::google::protobuf::int32 Zone_ResetCommands::arg1() const {
  // @@protoc_insertion_point(field_get:DawnMud.Zone.ResetCommands.arg1)
  return arg1_;
}
 void Zone_ResetCommands::set_arg1(::google::protobuf::int32 value) {
  
  arg1_ = value;
  // @@protoc_insertion_point(field_set:DawnMud.Zone.ResetCommands.arg1)
}

// optional sint32 arg2 = 4;
void Zone_ResetCommands::clear_arg2() {
  arg2_ = 0;
}
 ::google::protobuf::int32 Zone_ResetCommands::arg2() const {
  // @@protoc_insertion_point(field_get:DawnMud.Zone.ResetCommands.arg2)
  return arg2_;
}
 void Zone_ResetCommands::set_arg2(::google::protobuf::int32 value) {
  
  arg2_ = value;
  // @@protoc_insertion_point(field_set:DawnMud.Zone.ResetCommands.arg2)
}

// optional sint32 arg3 = 5;
void Zone_ResetCommands::clear_arg3() {
  arg3_ = 0;
}
 ::google::protobuf::int32 Zone_ResetCommands::arg3() const {
  // @@protoc_insertion_point(field_get:DawnMud.Zone.ResetCommands.arg3)
  return arg3_;
}
 void Zone_ResetCommands::set_arg3(::google::protobuf::int32 value) {
  
  arg3_ = value;
  // @@protoc_insertion_point(field_set:DawnMud.Zone.ResetCommands.arg3)
}

// optional sint32 line = 6;
void Zone_ResetCommands::clear_line() {
  line_ = 0;
}
 ::google::protobuf::int32 Zone_ResetCommands::line() const {
  // @@protoc_insertion_point(field_get:DawnMud.Zone.ResetCommands.line)
  return line_;
}
 void Zone_ResetCommands::set_line(::google::protobuf::int32 value) {
  
  line_ = value;
  // @@protoc_insertion_point(field_set:DawnMud.Zone.ResetCommands.line)
}

// -------------------------------------------------------------------

// Zone

// optional string name = 1;
void Zone::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Zone::name() const {
  // @@protoc_insertion_point(field_get:DawnMud.Zone.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Zone::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DawnMud.Zone.name)
}
 void Zone::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DawnMud.Zone.name)
}
 void Zone::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DawnMud.Zone.name)
}
 ::std::string* Zone::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:DawnMud.Zone.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Zone::release_name() {
  // @@protoc_insertion_point(field_release:DawnMud.Zone.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Zone::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:DawnMud.Zone.name)
}

// repeated string builders = 2;
int Zone::builders_size() const {
  return builders_.size();
}
void Zone::clear_builders() {
  builders_.Clear();
}
 const ::std::string& Zone::builders(int index) const {
  // @@protoc_insertion_point(field_get:DawnMud.Zone.builders)
  return builders_.Get(index);
}
 ::std::string* Zone::mutable_builders(int index) {
  // @@protoc_insertion_point(field_mutable:DawnMud.Zone.builders)
  return builders_.Mutable(index);
}
 void Zone::set_builders(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:DawnMud.Zone.builders)
  builders_.Mutable(index)->assign(value);
}
 void Zone::set_builders(int index, const char* value) {
  builders_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:DawnMud.Zone.builders)
}
 void Zone::set_builders(int index, const char* value, size_t size) {
  builders_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:DawnMud.Zone.builders)
}
 ::std::string* Zone::add_builders() {
  // @@protoc_insertion_point(field_add_mutable:DawnMud.Zone.builders)
  return builders_.Add();
}
 void Zone::add_builders(const ::std::string& value) {
  builders_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:DawnMud.Zone.builders)
}
 void Zone::add_builders(const char* value) {
  builders_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:DawnMud.Zone.builders)
}
 void Zone::add_builders(const char* value, size_t size) {
  builders_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:DawnMud.Zone.builders)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
Zone::builders() const {
  // @@protoc_insertion_point(field_list:DawnMud.Zone.builders)
  return builders_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
Zone::mutable_builders() {
  // @@protoc_insertion_point(field_mutable_list:DawnMud.Zone.builders)
  return &builders_;
}

// optional sint32 lifespan = 3;
void Zone::clear_lifespan() {
  lifespan_ = 0;
}
 ::google::protobuf::int32 Zone::lifespan() const {
  // @@protoc_insertion_point(field_get:DawnMud.Zone.lifespan)
  return lifespan_;
}
 void Zone::set_lifespan(::google::protobuf::int32 value) {
  
  lifespan_ = value;
  // @@protoc_insertion_point(field_set:DawnMud.Zone.lifespan)
}

// optional sint32 age = 4;
void Zone::clear_age() {
  age_ = 0;
}
 ::google::protobuf::int32 Zone::age() const {
  // @@protoc_insertion_point(field_get:DawnMud.Zone.age)
  return age_;
}
 void Zone::set_age(::google::protobuf::int32 value) {
  
  age_ = value;
  // @@protoc_insertion_point(field_set:DawnMud.Zone.age)
}

// optional sint32 bot = 5;
void Zone::clear_bot() {
  bot_ = 0;
}
 ::google::protobuf::int32 Zone::bot() const {
  // @@protoc_insertion_point(field_get:DawnMud.Zone.bot)
  return bot_;
}
 void Zone::set_bot(::google::protobuf::int32 value) {
  
  bot_ = value;
  // @@protoc_insertion_point(field_set:DawnMud.Zone.bot)
}

// optional sint32 top = 6;
void Zone::clear_top() {
  top_ = 0;
}
 ::google::protobuf::int32 Zone::top() const {
  // @@protoc_insertion_point(field_get:DawnMud.Zone.top)
  return top_;
}
 void Zone::set_top(::google::protobuf::int32 value) {
  
  top_ = value;
  // @@protoc_insertion_point(field_set:DawnMud.Zone.top)
}

// optional .DawnMud.Zone.ResetMode reset_mode = 7;
void Zone::clear_reset_mode() {
  reset_mode_ = 0;
}
 ::DawnMud::Zone_ResetMode Zone::reset_mode() const {
  // @@protoc_insertion_point(field_get:DawnMud.Zone.reset_mode)
  return static_cast< ::DawnMud::Zone_ResetMode >(reset_mode_);
}
 void Zone::set_reset_mode(::DawnMud::Zone_ResetMode value) {
  
  reset_mode_ = value;
  // @@protoc_insertion_point(field_set:DawnMud.Zone.reset_mode)
}

// optional sint32 number = 8;
void Zone::clear_number() {
  number_ = 0;
}
 ::google::protobuf::int32 Zone::number() const {
  // @@protoc_insertion_point(field_get:DawnMud.Zone.number)
  return number_;
}
 void Zone::set_number(::google::protobuf::int32 value) {
  
  number_ = value;
  // @@protoc_insertion_point(field_set:DawnMud.Zone.number)
}

// repeated .DawnMud.Zone.ResetCommands reset_com = 9;
int Zone::reset_com_size() const {
  return reset_com_.size();
}
void Zone::clear_reset_com() {
  reset_com_.Clear();
}
const ::DawnMud::Zone_ResetCommands& Zone::reset_com(int index) const {
  // @@protoc_insertion_point(field_get:DawnMud.Zone.reset_com)
  return reset_com_.Get(index);
}
::DawnMud::Zone_ResetCommands* Zone::mutable_reset_com(int index) {
  // @@protoc_insertion_point(field_mutable:DawnMud.Zone.reset_com)
  return reset_com_.Mutable(index);
}
::DawnMud::Zone_ResetCommands* Zone::add_reset_com() {
  // @@protoc_insertion_point(field_add:DawnMud.Zone.reset_com)
  return reset_com_.Add();
}
::google::protobuf::RepeatedPtrField< ::DawnMud::Zone_ResetCommands >*
Zone::mutable_reset_com() {
  // @@protoc_insertion_point(field_mutable_list:DawnMud.Zone.reset_com)
  return &reset_com_;
}
const ::google::protobuf::RepeatedPtrField< ::DawnMud::Zone_ResetCommands >&
Zone::reset_com() const {
  // @@protoc_insertion_point(field_list:DawnMud.Zone.reset_com)
  return reset_com_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZoneList::kZoneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZoneList::ZoneList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DawnMud.ZoneList)
}

void ZoneList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ZoneList::ZoneList(const ZoneList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DawnMud.ZoneList)
}

void ZoneList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

ZoneList::~ZoneList() {
  // @@protoc_insertion_point(destructor:DawnMud.ZoneList)
  SharedDtor();
}

void ZoneList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ZoneList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZoneList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ZoneList_descriptor_;
}

const ZoneList& ZoneList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dawnmud_2eproto();
  return *default_instance_;
}

ZoneList* ZoneList::default_instance_ = NULL;

ZoneList* ZoneList::New(::google::protobuf::Arena* arena) const {
  ZoneList* n = new ZoneList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZoneList::Clear() {
// @@protoc_insertion_point(message_clear_start:DawnMud.ZoneList)
  zone_.Clear();
}

bool ZoneList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DawnMud.ZoneList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DawnMud.Zone zone = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_zone:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_zone()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_zone;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DawnMud.ZoneList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DawnMud.ZoneList)
  return false;
#undef DO_
}

void ZoneList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DawnMud.ZoneList)
  // repeated .DawnMud.Zone zone = 1;
  for (unsigned int i = 0, n = this->zone_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->zone(i), output);
  }

  // @@protoc_insertion_point(serialize_end:DawnMud.ZoneList)
}

::google::protobuf::uint8* ZoneList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DawnMud.ZoneList)
  // repeated .DawnMud.Zone zone = 1;
  for (unsigned int i = 0, n = this->zone_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->zone(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DawnMud.ZoneList)
  return target;
}

int ZoneList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DawnMud.ZoneList)
  int total_size = 0;

  // repeated .DawnMud.Zone zone = 1;
  total_size += 1 * this->zone_size();
  for (int i = 0; i < this->zone_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->zone(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZoneList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DawnMud.ZoneList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ZoneList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ZoneList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DawnMud.ZoneList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DawnMud.ZoneList)
    MergeFrom(*source);
  }
}

void ZoneList::MergeFrom(const ZoneList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DawnMud.ZoneList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  zone_.MergeFrom(from.zone_);
}

void ZoneList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DawnMud.ZoneList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZoneList::CopyFrom(const ZoneList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DawnMud.ZoneList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZoneList::IsInitialized() const {

  return true;
}

void ZoneList::Swap(ZoneList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZoneList::InternalSwap(ZoneList* other) {
  zone_.UnsafeArenaSwap(&other->zone_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ZoneList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ZoneList_descriptor_;
  metadata.reflection = ZoneList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZoneList

// repeated .DawnMud.Zone zone = 1;
int ZoneList::zone_size() const {
  return zone_.size();
}
void ZoneList::clear_zone() {
  zone_.Clear();
}
const ::DawnMud::Zone& ZoneList::zone(int index) const {
  // @@protoc_insertion_point(field_get:DawnMud.ZoneList.zone)
  return zone_.Get(index);
}
::DawnMud::Zone* ZoneList::mutable_zone(int index) {
  // @@protoc_insertion_point(field_mutable:DawnMud.ZoneList.zone)
  return zone_.Mutable(index);
}
::DawnMud::Zone* ZoneList::add_zone() {
  // @@protoc_insertion_point(field_add:DawnMud.ZoneList.zone)
  return zone_.Add();
}
::google::protobuf::RepeatedPtrField< ::DawnMud::Zone >*
ZoneList::mutable_zone() {
  // @@protoc_insertion_point(field_mutable_list:DawnMud.ZoneList.zone)
  return &zone_;
}
const ::google::protobuf::RepeatedPtrField< ::DawnMud::Zone >&
ZoneList::zone() const {
  // @@protoc_insertion_point(field_list:DawnMud.ZoneList.zone)
  return zone_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace DawnMud

// @@protoc_insertion_point(global_scope)
